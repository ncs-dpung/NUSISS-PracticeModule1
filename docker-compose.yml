version: '3'

services:
  db:
    image: mysql:8.0.36
    ports:
      - "3306:3306"
    networks:
      - springapimysql-net
    environment:
      MYSQL_ROOT_PASSWORD: pwd123
      MYSQL_DATABASE: inventory_db
      MYSQL_USER: user123
      MYSQL_PASSWORD: pwd123
      TZ: Asia/Singapore
    volumes:
      - ./db:/docker-entrypoint-initdb.d  # Mount the db folder with initialization scripts
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1", "-u", "$$MYSQL_USER", "--password=$$MYSQL_PASSWORD" ]
      timeout: 10s
      retries: 10
      start_period: 30s

  dev-be:
    container_name: dev_be
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8080:8080"
    networks:
      - springapimysql-net
    environment:
      - spring.datasource.url=jdbc:mysql://db:3306/inventory_db
    entrypoint: sh ./docker-entrypoint.dev.sh
    volumes:
      - ./backend:/be
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8080/api/healthcheck || exit 1
      timeout: 15s
      retries: 20
      start_period: 30s

  dev-fe:
    container_name: dev_fe
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "4200:4200"
    volumes:
      - ./frontend/src:/app/src
    command: ng serve --host 0.0.0.0
    depends_on:
      dev-be:
        condition: service_healthy

  umlserver:
    container_name: uml
    image: plantuml/plantuml-server:tomcat
    ports:
      - 8000:8080

networks:
    springapimysql-net:
