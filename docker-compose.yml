version: '3'

services:
  backend:
    image: backend:latest
    container_name: backend
    build:
      context: ./backend  # Path to the backend Dockerfile
    ports:
      - "8080:8080"
    restart: always
    networks:
      - springapimysql-net
    environment:
      - spring.datasource.url=jdbc:mysql://db:3306/inventory_db
    command: [ "mvn", "-f", "/usr/src/app/pom.xml", "clean", "package", "Dspring.profiles.active=test" ]
    depends_on:
        - db  # Ensure the backend container starts after the database

  db:
    image: mysql:8.0.36  # Use the official MySQL
    restart: always
    ports:
      - "3306:3306"
    networks:
      - springapimysql-net
    environment:
      MYSQL_ROOT_PASSWORD: pwd123
      MYSQL_DATABASE: inventory_db
      MYSQL_USER: user123
      MYSQL_PASSWORD: pwd123
      MYSQL_INITDB_SKIP_TZINFO: true
    volumes:
      - ./db:/docker-entrypoint-initdb.d  # Mount the db folder with initialization scripts

#  frontend:
#    image: frontend:latest
#    container_name: frontend
#    build:
#      context: ./frontend  # Path to the frontend Dockerfile
#    ports:
#      - "4200:80"  # Map host port 4200 to container port 80

networks:
    springapimysql-net:
